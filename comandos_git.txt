# Vamos criar um arquivo .txt com os comandos Git organizados e explicados
git_commands = """
‚úÖ CONFIGURA√á√ÉO INICIAL DO GIT
git config --global user.name "Seu Nome"
# Define seu nome nas configura√ß√µes do Git

git config --global user.email "seu@email.com"
# Define seu e-mail usado para registrar os commits

üìÅ TRABALHANDO COM REPOSIT√ìRIOS
git init
# Cria um reposit√≥rio Git do zero na pasta atual

git clone [URL]
# Clona (copia) um reposit√≥rio existente da internet (ex: GitHub) para seu computador

üíæ ADICIONANDO E SALVANDO ALTERA√á√ïES
git add .
# Adiciona todas as mudan√ßas feitas (em todos os arquivos)

git add nome_do_arquivo.ext
# Adiciona um arquivo espec√≠fico

git commit -m "mensagem"
# Salva as mudan√ßas com uma mensagem explicando o que foi feito

üîç VERIFICANDO STATUS E HIST√ìRICO
git status
# Mostra o que foi modificado, adicionado ou ainda n√£o salvo

git log
# Exibe o hist√≥rico de todos os commits do projeto

üîÑ ENVIANDO E RECEBENDO DO REPOSIT√ìRIO REMOTO
git push
# Envia seus commits locais para o reposit√≥rio remoto (ex: GitHub)

git pull
# Puxa e atualiza seu projeto com as √∫ltimas mudan√ßas do reposit√≥rio remoto

git fetch
# Busca as atualiza√ß√µes do reposit√≥rio remoto (sem aplicar)

üåø BRANCHES (RAMIFICA√á√ïES)
git branch
# Lista todas as branches existentes

git branch nome_da_branch
# Cria uma nova branch

git checkout nome_da_branch
# Troca para uma branch existente

git checkout -b nome_da_branch
# Cria e j√° muda para a nova branch

git merge nome_da_branch
# Junta o conte√∫do de outra branch na branch atual

üßº DESFAZENDO ALTERA√á√ïES
git reset nome_do_arquivo.ext
# Remove o arquivo da √°rea de staging (antes do commit)

git checkout -- nome_do_arquivo.ext
# Desfaz as altera√ß√µes feitas no arquivo (volta ao √∫ltimo commit)

git reset --hard
# Volta tudo ao √∫ltimo commit (desfaz todas as altera√ß√µes locais)

git revert id_do_commit
# Cria um novo commit que desfaz um commit anterior (sem apagar hist√≥rico)

üìå OUTROS COMANDOS √öTEIS
git remote -v
# Mostra os reposit√≥rios remotos conectados

git rm nome_do_arquivo.ext
# Remove o arquivo do projeto e marca para exclus√£o no pr√≥ximo commit

git diff
# Mostra as diferen√ßas entre os arquivos modificados

git stash
# Guarda temporariamente altera√ß√µes que voc√™ n√£o quer commitar agora

git stash pop
# Recupera o que foi guardado com git stash
"""

# Salvar o conte√∫do em um arquivo .txt
file_path = "/mnt/data/comandos_git_explicados.txt"
with open(file_path, "w", encoding="utf-8") as file:
    file.write(git_commands)

file_path
